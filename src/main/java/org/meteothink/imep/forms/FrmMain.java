/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.meteothink.imep.forms;

import com.formdev.flatlaf.extras.FlatSVGIcon;
import org.meteoinfo.global.util.GlobalUtil;
import org.meteothink.imep.global.GenericFileFilter;
import org.meteothink.imep.global.Globals;
import org.meteothink.imep.global.Options;
import org.meteothink.imep.verification.StatType;
import org.meteothink.imep.verification.VerifyCase;
import org.meteothink.imep.verification.VerifyGroup;
import org.xml.sax.SAXException;

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.xml.parsers.ParserConfigurationException;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author yaqiang
 */
public class FrmMain extends javax.swing.JFrame {

    private Options _options = new Options();
    private VerifyCase _verifyCase;
    private VerifyGroup _currentGroup;
    private String _verifyFileName = "";

    /**
     * Creates new form FrmMain
     */
    public FrmMain() {
        initComponents();

        this.jMenu_View.setVisible(false);
        this.jMenu_Tools.setVisible(false);
        this.jMenuItem_Help.setVisible(false);
        
        BufferedImage image = null;
        try {
            image = ImageIO.read(this.getClass().getResource("/images/check_24.png"));
        } catch (Exception e) {
        }
        this.setIconImage(image);

        this.jProgressBar_Main.setVisible(false);
        this.loadConfigureFile();

        this.jList_Groups.setModel(new DefaultListModel());
        this.jComboBox_StatType.removeAllItems();
        this.jComboBox_StatType.addItem(StatType.GridStat);
        this.jComboBox_StatType.addItem(StatType.StationStat);

        this.jComboBox_TimeZone.removeAllItems();
        for (int i = -12; i <= 12; i++) {
            this.jComboBox_TimeZone.addItem(Globals.getTimeZoneString(i));
        }

        this.jLabel_Groups.setVisible(false);
        this.jList_Groups.setVisible(false);
        this.jPanel_GroupSetting.setVisible(false);
        this.jButton_SaveVerifyCase.setEnabled(false);
        this.jButton_AddGroup.setEnabled(false);
        this.jButton_DeleteGroup.setEnabled(false);
        this.jButton_SaveGroup.setEnabled(false);
        this.jButton_Run.setEnabled(false);
    }

    public final void loadConfigureFile() {
        String fn = GlobalUtil.getAppPath(FrmMain.class);
        //String fn = System.getProperty("user.dir");
        fn = fn + File.separator + "config.xml";
        if (new File(fn).exists()) {
            try {
                this._options.loadConfigFile(fn);
            } catch (ParserConfigurationException | SAXException | IOException ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public final void saveConfigureFile() {
        String fn = this._options.getFileName();
        try {
            this._options.saveConfigFile(fn);
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList_Groups = new javax.swing.JList();
        jLabel_Groups = new javax.swing.JLabel();
        jPanel_GroupSetting = new javax.swing.JPanel();
        jLabel_GroupName = new javax.swing.JLabel();
        jTextField_GroupName = new javax.swing.JTextField();
        jComboBox_StatType = new javax.swing.JComboBox();
        jLabel_StatType = new javax.swing.JLabel();
        jLabel_TimeZone = new javax.swing.JLabel();
        jLabel_OutPath = new javax.swing.JLabel();
        jTextField_OutPath = new javax.swing.JTextField();
        jLabel_MaskFile = new javax.swing.JLabel();
        jTextField_MaskFile = new javax.swing.JTextField();
        jLabel_RegionFile = new javax.swing.JLabel();
        jTextField_RegionFile = new javax.swing.JTextField();
        jButton_OutPath = new javax.swing.JButton();
        jButton_MaskFile = new javax.swing.JButton();
        jButton_RegionFile = new javax.swing.JButton();
        jComboBox_TimeZone = new javax.swing.JComboBox();
        jButton_ObsDataset = new javax.swing.JButton();
        jButton_FcstDataset = new javax.swing.JButton();
        jButton_Times = new javax.swing.JButton();
        jButton_Method = new javax.swing.JButton();
        jLabel_MaskFile1 = new javax.swing.JLabel();
        jTextField_FilterFile = new javax.swing.JTextField();
        jButton_FilterFile = new javax.swing.JButton();
        jToolBar_Main = new javax.swing.JToolBar();
        jButton_NewVerifyCase = new javax.swing.JButton();
        jButton_LoadVerifyCase = new javax.swing.JButton();
        jButton_SaveVerifyCase = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jButton_AddGroup = new javax.swing.JButton();
        jButton_DeleteGroup = new javax.swing.JButton();
        jButton_SaveGroup = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jButton_Run = new javax.swing.JButton();
        jToolBar_Status = new javax.swing.JToolBar();
        jProgressBar_Main = new javax.swing.JProgressBar();
        jLabel9 = new javax.swing.JLabel();
        jMenuBar_Main = new javax.swing.JMenuBar();
        jMenu_VerifyCase = new javax.swing.JMenu();
        jMenuItem_NewCase = new JMenuItem();
        jMenuItem_OpenCase = new JMenuItem();
        jMenuItem_SaveCase = new JMenuItem();
        jMenuItem_SaveAs = new JMenuItem();
        jSeparator4 = new JPopupMenu.Separator();
        jMenuItem_Exit = new JMenuItem();
        jMenu_View = new javax.swing.JMenu();
        jMenuItem_Map = new JMenuItem();
        jMenu_Tools = new javax.swing.JMenu();
        jMenuItem_Script = new JMenuItem();
        jMenu_Help = new javax.swing.JMenu();
        jMenuItem_About = new JMenuItem();
        jMenuItem_Help = new JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IMEP");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jList_Groups.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList_Groups.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                jList_GroupsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList_Groups);

        jLabel_Groups.setText("Groups:");

        jPanel_GroupSetting.setBorder(javax.swing.BorderFactory.createTitledBorder("Group Setting"));

        jLabel_GroupName.setText("Name:");

        jComboBox_StatType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel_StatType.setText("StatType:");

        jLabel_TimeZone.setText("TimeZone:");

        jLabel_OutPath.setText("OutPath:");

        jLabel_MaskFile.setText("MaskFile:");

        jLabel_RegionFile.setText("RegionFile:");

        //jButton_OutPath.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Folder_1_16x16x8.png"))); // NOI18N
        jButton_OutPath.setIcon(new FlatSVGIcon("org/meteoinfo/icons/file-open.svg"));
        jButton_OutPath.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_OutPathActionPerformed(evt);
            }
        });

        //jButton_MaskFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Folder_1_16x16x8.png"))); // NOI18N
        jButton_MaskFile.setIcon(new FlatSVGIcon("org/meteoinfo/icons/file-open.svg"));
        jButton_MaskFile.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_MaskFileActionPerformed(evt);
            }
        });

        //jButton_RegionFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Folder_1_16x16x8.png"))); // NOI18N
        jButton_RegionFile.setIcon(new FlatSVGIcon("org/meteoinfo/icons/file-open.svg"));
        jButton_RegionFile.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_RegionFileActionPerformed(evt);
            }
        });

        jComboBox_TimeZone.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton_ObsDataset.setText("Observation Dataset");
        jButton_ObsDataset.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_ObsDatasetActionPerformed(evt);
            }
        });

        jButton_FcstDataset.setText("Forecast Dataset");
        jButton_FcstDataset.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_FcstDatasetActionPerformed(evt);
            }
        });

        jButton_Times.setText("Times");
        jButton_Times.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_TimesActionPerformed(evt);
            }
        });

        jButton_Method.setText("Method");
        jButton_Method.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_MethodActionPerformed(evt);
            }
        });

        jLabel_MaskFile1.setText("FilterFile:");

        //jButton_FilterFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Folder_1_16x16x8.png"))); // NOI18N
        jButton_FilterFile.setIcon(new FlatSVGIcon("org/meteoinfo/icons/file-open.svg"));
        jButton_FilterFile.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_FilterFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_GroupSettingLayout = new javax.swing.GroupLayout(jPanel_GroupSetting);
        jPanel_GroupSetting.setLayout(jPanel_GroupSettingLayout);
        jPanel_GroupSettingLayout.setHorizontalGroup(
            jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_GroupSettingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_OutPath, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_MaskFile1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_MaskFile, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_RegionFile, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_RegionFile)
                    .addComponent(jTextField_MaskFile, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_FilterFile)
                    .addComponent(jTextField_OutPath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton_OutPath)
                        .addComponent(jButton_MaskFile)
                        .addComponent(jButton_RegionFile))
                    .addComponent(jButton_FilterFile, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel_GroupSettingLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_GroupName)
                    .addComponent(jLabel_StatType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_GroupName)
                    .addComponent(jComboBox_StatType, 0, 156, Short.MAX_VALUE))
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_GroupSettingLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel_TimeZone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_TimeZone, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_GroupSettingLayout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jButton_Method)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel_GroupSettingLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jButton_ObsDataset)
                .addGap(18, 18, 18)
                .addComponent(jButton_FcstDataset)
                .addGap(18, 18, 18)
                .addComponent(jButton_Times, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(44, 44, 44))
        );
        jPanel_GroupSettingLayout.setVerticalGroup(
            jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_GroupSettingLayout.createSequentialGroup()
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_GroupName)
                    .addComponent(jTextField_GroupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Method))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_StatType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_StatType)
                    .addComponent(jComboBox_TimeZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_TimeZone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel_OutPath)
                        .addComponent(jTextField_OutPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton_OutPath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel_MaskFile1)
                        .addComponent(jTextField_FilterFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton_FilterFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel_MaskFile)
                        .addComponent(jTextField_MaskFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton_MaskFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel_RegionFile)
                        .addComponent(jTextField_RegionFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton_RegionFile))
                .addGap(18, 18, 18)
                .addGroup(jPanel_GroupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_ObsDataset)
                    .addComponent(jButton_FcstDataset)
                    .addComponent(jButton_Times))
                .addContainerGap())
        );

        jToolBar_Main.setBorder(null);
        jToolBar_Main.setFloatable(false);
        jToolBar_Main.setRollover(true);

        ClassLoader classLoader = FrmMain.class.getClassLoader();

        //jButton_NewVerifyCase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/TSB_NewFile.Image.png"))); // NOI18N
        jButton_NewVerifyCase.setIcon(new FlatSVGIcon("org/meteothink/imep/icons/file-new.svg", classLoader));
        jButton_NewVerifyCase.setToolTipText("New Verify Case");
        jButton_NewVerifyCase.setFocusable(false);
        jButton_NewVerifyCase.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_NewVerifyCase.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_NewVerifyCase.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_NewVerifyCaseActionPerformed(evt);
            }
        });
        jToolBar_Main.add(jButton_NewVerifyCase);

        //jButton_LoadVerifyCase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Folder_1_16x16x8.png"))); // NOI18N
        jButton_LoadVerifyCase.setIcon(new FlatSVGIcon("org/meteoinfo/icons/file-open.svg"));
        jButton_LoadVerifyCase.setToolTipText("Open Verify Case");
        jButton_LoadVerifyCase.setFocusable(false);
        jButton_LoadVerifyCase.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_LoadVerifyCase.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_LoadVerifyCase.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_LoadVerifyCaseActionPerformed(evt);
            }
        });
        jToolBar_Main.add(jButton_LoadVerifyCase);

        //jButton_SaveVerifyCase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Disk_1_16x16x8.png"))); // NOI18N
        jButton_SaveVerifyCase.setIcon(new FlatSVGIcon("org/meteoinfo/icons/file-save.svg"));
        jButton_SaveVerifyCase.setToolTipText("Save Verify Case");
        jButton_SaveVerifyCase.setFocusable(false);
        jButton_SaveVerifyCase.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_SaveVerifyCase.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_SaveVerifyCase.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_SaveVerifyCaseActionPerformed(evt);
            }
        });
        jToolBar_Main.add(jButton_SaveVerifyCase);
        jToolBar_Main.add(jSeparator3);

        //jButton_AddGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/TSB_Add.Image.png"))); // NOI18N
        jButton_AddGroup.setIcon(new FlatSVGIcon("org/meteoinfo/icons/add.svg"));
        jButton_AddGroup.setToolTipText("Add Group");
        jButton_AddGroup.setFocusable(false);
        jButton_AddGroup.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_AddGroup.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_AddGroup.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_AddGroupActionPerformed(evt);
            }
        });
        jToolBar_Main.add(jButton_AddGroup);

        //jButton_DeleteGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/TSB_Del.Image.png"))); // NOI18N
        jButton_DeleteGroup.setIcon(new FlatSVGIcon("org/meteoinfo/icons/remove.svg"));
        jButton_DeleteGroup.setToolTipText("Delete Group");
        jButton_DeleteGroup.setFocusable(false);
        jButton_DeleteGroup.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_DeleteGroup.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_DeleteGroup.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_DeleteGroupActionPerformed(evt);
            }
        });
        jToolBar_Main.add(jButton_DeleteGroup);

        //jButton_SaveGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Save.png"))); // NOI18N
        jButton_SaveGroup.setIcon(new FlatSVGIcon("org/meteothink/imep/icons/save-as.svg", classLoader));
        jButton_SaveGroup.setToolTipText("Save Group");
        jButton_SaveGroup.setFocusable(false);
        jButton_SaveGroup.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_SaveGroup.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_SaveGroup.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_SaveGroupActionPerformed(evt);
            }
        });
        jToolBar_Main.add(jButton_SaveGroup);
        jToolBar_Main.add(jSeparator2);

        //jButton_Run.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/TSB_RunScript.Image.png"))); // NOI18N
        jButton_Run.setIcon(new FlatSVGIcon("org/meteothink/imep/icons/execute.svg", classLoader));
        jButton_Run.setToolTipText("Run Verification");
        jButton_Run.setFocusable(false);
        jButton_Run.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_Run.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_Run.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_RunActionPerformed(evt);
            }
        });
        jToolBar_Main.add(jButton_Run);

        jToolBar_Status.setFloatable(false);
        jToolBar_Status.setRollover(true);

        jProgressBar_Main.setAlignmentX(0.0F);
        jProgressBar_Main.setMaximumSize(new java.awt.Dimension(32767, 18));
        jProgressBar_Main.setPreferredSize(new java.awt.Dimension(100, 18));
        jProgressBar_Main.setSize(new java.awt.Dimension(100, 18));
        jToolBar_Status.add(jProgressBar_Main);

        jLabel9.setText("                                            ");
        jToolBar_Status.add(jLabel9);

        jMenu_VerifyCase.setText("Case");

        //jMenuItem_NewCase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/TSB_NewFile.Image.png"))); // NOI18N
        jMenuItem_NewCase.setIcon(new FlatSVGIcon("org/meteothink/imep/icons/file-new.svg", classLoader));
        jMenuItem_NewCase.setText("New Case");
        jMenuItem_NewCase.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jMenuItem_NewCaseActionPerformed(evt);
            }
        });
        jMenu_VerifyCase.add(jMenuItem_NewCase);

        //jMenuItem_OpenCase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Folder_1_16x16x8.png"))); // NOI18N
        jMenuItem_OpenCase.setIcon(new FlatSVGIcon("org/meteoinfo/icons/file-open.svg"));
        jMenuItem_OpenCase.setText("Open Case");
        jMenuItem_OpenCase.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jMenuItem_OpenCaseActionPerformed(evt);
            }
        });
        jMenu_VerifyCase.add(jMenuItem_OpenCase);

        //jMenuItem_SaveCase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Disk_1_16x16x8.png"))); // NOI18N
        jMenuItem_SaveCase.setIcon(new FlatSVGIcon("org/meteoinfo/icons/file-save.svg"));
        jMenuItem_SaveCase.setText("Save Case");
        jMenuItem_SaveCase.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jMenuItem_SaveCaseActionPerformed(evt);
            }
        });
        jMenu_VerifyCase.add(jMenuItem_SaveCase);

        jMenuItem_SaveAs.setText("Save As");
        jMenuItem_SaveAs.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jMenuItem_SaveAsActionPerformed(evt);
            }
        });
        jMenu_VerifyCase.add(jMenuItem_SaveAs);
        jMenu_VerifyCase.add(jSeparator4);

        jMenuItem_Exit.setText("Exit");
        jMenuItem_Exit.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jMenuItem_ExitActionPerformed(evt);
            }
        });
        jMenu_VerifyCase.add(jMenuItem_Exit);

        jMenuBar_Main.add(jMenu_VerifyCase);

        jMenu_View.setText("View");

        jMenuItem_Map.setText("Map");
        jMenuItem_Map.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jMenuItem_MapActionPerformed(evt);
            }
        });
        jMenu_View.add(jMenuItem_Map);

        jMenuBar_Main.add(jMenu_View);

        jMenu_Tools.setText("Tools");

        jMenuItem_Script.setText("Script");
        jMenuItem_Script.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jMenuItem_ScriptActionPerformed(evt);
            }
        });
        jMenu_Tools.add(jMenuItem_Script);

        jMenuBar_Main.add(jMenu_Tools);

        jMenu_Help.setText("Help");

        jMenuItem_About.setText("About");
        jMenuItem_About.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jMenuItem_AboutActionPerformed(evt);
            }
        });
        jMenu_Help.add(jMenuItem_About);

        jMenuItem_Help.setText("Help");
        jMenu_Help.add(jMenuItem_Help);

        jMenuBar_Main.add(jMenu_Help);

        setJMenuBar(jMenuBar_Main);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_Groups)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_GroupSetting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jToolBar_Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToolBar_Status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar_Main, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel_Groups)
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane1))
                    .addComponent(jPanel_GroupSetting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addComponent(jToolBar_Status, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Get options
     *
     * @return Options
     */
    public Options getOptions() {
        return this._options;
    }

    private void jMenuItem_MapActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jMenuItem_MapActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuItem_MapActionPerformed

    private void jMenuItem_AboutActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jMenuItem_AboutActionPerformed
        // TODO add your handling code here:
        FrmAbout frmAbout = new FrmAbout(this, false);
        frmAbout.setLocationRelativeTo(this);
        frmAbout.setVisible(true);
    }//GEN-LAST:event_jMenuItem_AboutActionPerformed

    private void jMenuItem_ScriptActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jMenuItem_ScriptActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuItem_ScriptActionPerformed

    private void jButton_AddGroupActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_AddGroupActionPerformed
        // TODO add your handling code here:
        String name = JOptionPane.showInputDialog("Group Name", "New Group");
        VerifyGroup group = new VerifyGroup(name);
        this.addGroup(group);
    }//GEN-LAST:event_jButton_AddGroupActionPerformed

    private void addGroup(VerifyGroup group){
        this._verifyCase.addVerifyGroup(group);
        ((DefaultListModel) this.jList_Groups.getModel()).addElement(group.getName());
        this.jList_Groups.setSelectedIndex(this.jList_Groups.getModel().getSize() - 1);
        this._currentGroup = group;
        this.updateContorls(group);
    }
    
    private void jButton_DeleteGroupActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_DeleteGroupActionPerformed
        // TODO add your handling code here:
        if (this._verifyCase.getVerifyGroups().size() == 1) {
            JOptionPane.showMessageDialog(null, "There is at least one group!");
        } else {
            int result = JOptionPane.showConfirmDialog(null, "Do your really want to remove this group?" + " " + this._currentGroup.getName(), "Conform remove group", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                this._verifyCase.removeVerifyGroup(_currentGroup);                
                ((DefaultListModel) this.jList_Groups.getModel()).removeElement(this._currentGroup.getName());
                this.jList_Groups.setSelectedIndex(this.jList_Groups.getModel().getSize() - 1);
                this._currentGroup = this._verifyCase.getVerifyGroups().get(this.jList_Groups.getSelectedIndex());
                this.updateContorls(_currentGroup);
            }
        }
    }//GEN-LAST:event_jButton_DeleteGroupActionPerformed

    private void jButton_SaveGroupActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_SaveGroupActionPerformed
        // TODO add your handling code here:
        this.saveCurrentGroup();
    }//GEN-LAST:event_jButton_SaveGroupActionPerformed

    private void jButton_SaveVerifyCaseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_SaveVerifyCaseActionPerformed
        // TODO add your handling code here:
        this.saveVerifyCase();
    }//GEN-LAST:event_jButton_SaveVerifyCaseActionPerformed

    private void saveCurrentGroup() {
        if (_currentGroup != null) {
            String name = this.jTextField_GroupName.getText();
            this._currentGroup.setName(name);  
            DefaultListModel listModel = (DefaultListModel) this.jList_Groups.getModel();
            listModel.set(this._verifyCase.getVerifyGroups().indexOf(this._currentGroup), name);
            this._currentGroup.setStatType(StatType.valueOf(this.jComboBox_StatType.getSelectedItem().toString()));
            this._currentGroup.setTimeZone(Globals.getTimeZone(this.jComboBox_TimeZone.getSelectedItem().toString()));
            this._currentGroup.setOutFilePath(this.jTextField_OutPath.getText());
            this._currentGroup.setDataMaskFile(this.jTextField_MaskFile.getText());
            this._currentGroup.setStatRegionFile(this.jTextField_RegionFile.getText());
        }
    }

    private void saveVerifyCase() {
        this.saveCurrentGroup();
        if (this._verifyFileName.isEmpty()) {
            JFileChooser aDlg = new JFileChooser();
            String[] fileExts = new String[]{"vrf"};
            GenericFileFilter fileFilter = new GenericFileFilter(fileExts, "Verification File (*.vrf)");
            aDlg.setFileFilter(fileFilter);
            File dir = new File(System.getProperty("user.dir"));
            if (dir.isDirectory()) {
                aDlg.setCurrentDirectory(dir);
            }
            if (aDlg.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = aDlg.getSelectedFile();
                System.setProperty("user.dir", file.getParent());
                String extent = ((GenericFileFilter) aDlg.getFileFilter()).getFileExtent();
                String fileName = file.getAbsolutePath();
                if (!fileName.substring(fileName.length() - extent.length()).equals(extent)) {
                    fileName = fileName + "." + extent;
                }
                try {
                    this._verifyCase.exportToXMLFile(fileName);
                } catch (ParserConfigurationException ex) {
                    Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            try {
                this._verifyCase.exportToXMLFile(this._verifyFileName);
            } catch (ParserConfigurationException ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void jButton_RunActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_RunActionPerformed
        // TODO add your handling code here:
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        this.saveCurrentGroup();
        this._verifyCase.run();
        //run_test();
        this.setCursor(Cursor.getDefaultCursor());
        JOptionPane.showMessageDialog(null, "Finished!");
    }//GEN-LAST:event_jButton_RunActionPerformed

    private void jButton_LoadVerifyCaseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_LoadVerifyCaseActionPerformed
        // TODO add your handling code here:
        loadVerifyCase();
    }//GEN-LAST:event_jButton_LoadVerifyCaseActionPerformed

    private void loadVerifyCase() {
        String path = System.getProperty("user.dir");
        File pathDir = new File(path);
        JFileChooser aDlg = new JFileChooser();
        aDlg.setAcceptAllFileFilterUsed(false);
        aDlg.setCurrentDirectory(pathDir);
        String[] fileExts = new String[]{"vrf"};
        GenericFileFilter verifyFileFilter = new GenericFileFilter(fileExts, "Verify file");
        aDlg.setFileFilter(verifyFileFilter);
        if (JFileChooser.APPROVE_OPTION == aDlg.showOpenDialog(this)) {
            File aFile = aDlg.getSelectedFile();
            System.setProperty("user.dir", aFile.getParent());

            VerifyCase verifyCase = new VerifyCase("Temp");
            try {
                verifyCase.importFromXMLFile(aFile.getAbsolutePath());
                this._verifyFileName = aFile.getAbsolutePath();
                this.setVerifyCase(verifyCase);
                this.setTitle("IMEP - " + aFile.getName());
            } catch (ParserConfigurationException ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SAXException ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void updateContorls(VerifyGroup group) {
        this.jTextField_GroupName.setText(group.getName());

        this.jComboBox_StatType.setSelectedItem(group.getStatType());
        this.jComboBox_TimeZone.setSelectedItem(Globals.getTimeZoneString(group.getTimeZone()));
        this.jTextField_OutPath.setText(group.getOutFilePath());
        this.jTextField_MaskFile.setText(group.getDataMaskFile());
        this.jTextField_RegionFile.setText(group.getStatRegionFile());
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.saveConfigureFile();
    }//GEN-LAST:event_formWindowClosing

    private void jButton_NewVerifyCaseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_NewVerifyCaseActionPerformed
        // TODO add your handling code here:
        this._verifyFileName = "";
        VerifyCase verifyCase = new VerifyCase("New Case");
        VerifyGroup group = new VerifyGroup("New Group");
        verifyCase.addVerifyGroup(group);
        this.setVerifyCase(verifyCase);
    }//GEN-LAST:event_jButton_NewVerifyCaseActionPerformed

    private void jButton_OutPathActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_OutPathActionPerformed
        // TODO add your handling code here:
        String path = System.getProperty("user.dir");
        File pathDir = new File(path);
        JFileChooser aDlg = new JFileChooser();
        aDlg.setAcceptAllFileFilterUsed(false);
        aDlg.setCurrentDirectory(pathDir);
        aDlg.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (JFileChooser.APPROVE_OPTION == aDlg.showOpenDialog(this)) {
            File aFile = aDlg.getSelectedFile();
            //System.setProperty("user.dir", aFile.getParent());

            this.jTextField_OutPath.setText(aFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton_OutPathActionPerformed

    private void jButton_MaskFileActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_MaskFileActionPerformed
        // TODO add your handling code here:
        String path = System.getProperty("user.dir");
        File pathDir = new File(path);
        JFileChooser aDlg = new JFileChooser();
        aDlg.setAcceptAllFileFilterUsed(false);
        aDlg.setCurrentDirectory(pathDir);
        String[] fileExts = new String[]{"shp"};
        GenericFileFilter verifyFileFilter = new GenericFileFilter(fileExts, "Shape file");
        aDlg.setFileFilter(verifyFileFilter);
        if (JFileChooser.APPROVE_OPTION == aDlg.showOpenDialog(this)) {
            File aFile = aDlg.getSelectedFile();
            System.setProperty("user.dir", aFile.getParent());

            this.jTextField_MaskFile.setText(aFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton_MaskFileActionPerformed

    private void jButton_RegionFileActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_RegionFileActionPerformed
        // TODO add your handling code here:
        String path = System.getProperty("user.dir");
        File pathDir = new File(path);
        JFileChooser aDlg = new JFileChooser();
        aDlg.setAcceptAllFileFilterUsed(false);
        aDlg.setCurrentDirectory(pathDir);
        String[] fileExts = new String[]{"shp"};
        GenericFileFilter verifyFileFilter = new GenericFileFilter(fileExts, "Shape file");
        aDlg.setFileFilter(verifyFileFilter);
        if (JFileChooser.APPROVE_OPTION == aDlg.showOpenDialog(this)) {
            File aFile = aDlg.getSelectedFile();
            System.setProperty("user.dir", aFile.getParent());

            this.jTextField_RegionFile.setText(aFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton_RegionFileActionPerformed

    private void jButton_ObsDatasetActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_ObsDatasetActionPerformed
        // TODO add your handling code here:
        FrmDataset frmDataset = new FrmDataset(this, true);
        frmDataset.setTitle("Observation Dataset");
        frmDataset.setDataset(this._currentGroup.getObsDataset());
        frmDataset.setLocationRelativeTo(this);
        frmDataset.setVisible(true);
    }//GEN-LAST:event_jButton_ObsDatasetActionPerformed

    private void jButton_FcstDatasetActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_FcstDatasetActionPerformed
        // TODO add your handling code here:
        FrmDataset frmDataset = new FrmDataset(this, true);
        frmDataset.setTitle("Forecast Dataset");
        frmDataset.setDataset(this._currentGroup.getFcstDataset());
        frmDataset.setLocationRelativeTo(this);
        frmDataset.setVisible(true);
    }//GEN-LAST:event_jButton_FcstDatasetActionPerformed

    private void jButton_TimesActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_TimesActionPerformed
        // TODO add your handling code here:
        FrmTimes frmTimes = new FrmTimes(this, true);
        frmTimes.setVerifyGroup(_currentGroup);
        frmTimes.setLocationRelativeTo(this);
        frmTimes.setVisible(true);
    }//GEN-LAST:event_jButton_TimesActionPerformed

    private void jButton_MethodActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_MethodActionPerformed
        // TODO add your handling code here:
        FrmMethod frmMethod = new FrmMethod(this, true);
        frmMethod.setVerifyGroup(_currentGroup);
        frmMethod.setLocationRelativeTo(this);
        frmMethod.setVisible(true);
    }//GEN-LAST:event_jButton_MethodActionPerformed

    private void jMenuItem_NewCaseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jMenuItem_NewCaseActionPerformed
        // TODO add your handling code here:
        this._verifyFileName = "";
        VerifyCase verifyCase = new VerifyCase("New Case");
        VerifyGroup group = new VerifyGroup("New Group");
        verifyCase.addVerifyGroup(group);
        this.setVerifyCase(verifyCase);
    }//GEN-LAST:event_jMenuItem_NewCaseActionPerformed

    private void jMenuItem_OpenCaseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jMenuItem_OpenCaseActionPerformed
        // TODO add your handling code here:
        this.loadVerifyCase();
    }//GEN-LAST:event_jMenuItem_OpenCaseActionPerformed

    private void jMenuItem_SaveCaseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SaveCaseActionPerformed
        // TODO add your handling code here:
        this.saveVerifyCase();
    }//GEN-LAST:event_jMenuItem_SaveCaseActionPerformed

    private void jMenuItem_SaveAsActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SaveAsActionPerformed
        // TODO add your handling code here:
        JFileChooser aDlg = new JFileChooser();
        String[] fileExts = new String[]{"vrf"};
        GenericFileFilter fileFilter = new GenericFileFilter(fileExts, "Verification File (*.vrf)");
        aDlg.setFileFilter(fileFilter);
        File dir = new File(System.getProperty("user.dir"));
        if (dir.isDirectory()) {
            aDlg.setCurrentDirectory(dir);
        }
        if (aDlg.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = aDlg.getSelectedFile();
            System.setProperty("user.dir", file.getParent());
            String extent = ((GenericFileFilter) aDlg.getFileFilter()).getFileExtent();
            String fileName = file.getAbsolutePath();
            if (!fileName.substring(fileName.length() - extent.length()).equals(extent)) {
                fileName = fileName + "." + extent;
            }
            try {
                this._verifyCase.exportToXMLFile(fileName);
                this._verifyFileName = fileName;
                this.setTitle("IMEP - " + file.getName());
            } catch (ParserConfigurationException ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem_SaveAsActionPerformed

    private void jMenuItem_ExitActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jMenuItem_ExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem_ExitActionPerformed

    private void jList_GroupsMouseClicked(MouseEvent evt) {//GEN-FIRST:event_jList_GroupsMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int idx = this.jList_Groups.getSelectedIndex();
            if (idx >= 0) {
                this.saveCurrentGroup();
                _currentGroup = this._verifyCase.getVerifyGroups().get(idx);
                this.updateContorls(_currentGroup);
            }
        } else if (evt.getButton() == MouseEvent.BUTTON3) {
            JPopupMenu popupMenu = new JPopupMenu();
            JMenuItem copyGroupMI = new JMenuItem("Copy Group");
            copyGroupMI.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    onCopyGroupClick(e);
                }
            });
            popupMenu.add(copyGroupMI);
            popupMenu.show(this.jList_Groups, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jList_GroupsMouseClicked

    private void jButton_FilterFileActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton_FilterFileActionPerformed
        // TODO add your handling code here:
        String path = System.getProperty("user.dir");
        File pathDir = new File(path);
        JFileChooser aDlg = new JFileChooser();
        //aDlg.setAcceptAllFileFilterUsed(false);
        aDlg.setCurrentDirectory(pathDir);
        String[] fileExts = new String[]{"txt"};
        GenericFileFilter verifyFileFilter = new GenericFileFilter(fileExts, "Text file");
        aDlg.setFileFilter(verifyFileFilter);
        if (JFileChooser.APPROVE_OPTION == aDlg.showOpenDialog(this)) {
            File aFile = aDlg.getSelectedFile();
            System.setProperty("user.dir", aFile.getParent());

            this.jTextField_FilterFile.setText(aFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton_FilterFileActionPerformed

    private void onCopyGroupClick(ActionEvent e) {
        int idx = this.jList_Groups.getSelectedIndex();
        if (idx >= 0) {
            try {
                this.saveCurrentGroup();
                VerifyGroup group = this._verifyCase.getVerifyGroups().get(idx);
                VerifyGroup newGroup = (VerifyGroup) group.clone();
                newGroup.setName(group.getName() + "_Copy");
                this.addGroup(newGroup);
            } catch (CloneNotSupportedException ex) {
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void setVerifyCase(VerifyCase verifyCase) {
        this.jLabel_Groups.setVisible(true);
        this.jList_Groups.setVisible(true);
        this.jPanel_GroupSetting.setVisible(true);
        this.jButton_SaveVerifyCase.setEnabled(true);
        this.jButton_AddGroup.setEnabled(true);
        this.jButton_DeleteGroup.setEnabled(true);
        this.jButton_SaveGroup.setEnabled(true);
        this.jButton_Run.setEnabled(true);

        DefaultListModel listModel = (DefaultListModel) this.jList_Groups.getModel();
        listModel.clear();
        for (String name : verifyCase.getGroupNames()) {
            listModel.addElement(name);
        }

        this._verifyCase = verifyCase;
        this.jList_Groups.setSelectedIndex(0);
        this._currentGroup = this._verifyCase.getVerifyGroups().get(0);
        this.updateContorls(_currentGroup);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmMain().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton_AddGroup;
    private javax.swing.JButton jButton_DeleteGroup;
    private javax.swing.JButton jButton_FcstDataset;
    private javax.swing.JButton jButton_FilterFile;
    private javax.swing.JButton jButton_LoadVerifyCase;
    private javax.swing.JButton jButton_MaskFile;
    private javax.swing.JButton jButton_Method;
    private javax.swing.JButton jButton_NewVerifyCase;
    private javax.swing.JButton jButton_ObsDataset;
    private javax.swing.JButton jButton_OutPath;
    private javax.swing.JButton jButton_RegionFile;
    private javax.swing.JButton jButton_Run;
    private javax.swing.JButton jButton_SaveGroup;
    private javax.swing.JButton jButton_SaveVerifyCase;
    private javax.swing.JButton jButton_Times;
    private javax.swing.JComboBox jComboBox_StatType;
    private javax.swing.JComboBox jComboBox_TimeZone;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_GroupName;
    private javax.swing.JLabel jLabel_Groups;
    private javax.swing.JLabel jLabel_MaskFile;
    private javax.swing.JLabel jLabel_MaskFile1;
    private javax.swing.JLabel jLabel_OutPath;
    private javax.swing.JLabel jLabel_RegionFile;
    private javax.swing.JLabel jLabel_StatType;
    private javax.swing.JLabel jLabel_TimeZone;
    private javax.swing.JList jList_Groups;
    private javax.swing.JMenuBar jMenuBar_Main;
    private JMenuItem jMenuItem_About;
    private JMenuItem jMenuItem_Exit;
    private JMenuItem jMenuItem_Help;
    private JMenuItem jMenuItem_Map;
    private JMenuItem jMenuItem_NewCase;
    private JMenuItem jMenuItem_OpenCase;
    private JMenuItem jMenuItem_SaveAs;
    private JMenuItem jMenuItem_SaveCase;
    private JMenuItem jMenuItem_Script;
    private javax.swing.JMenu jMenu_Help;
    private javax.swing.JMenu jMenu_Tools;
    private javax.swing.JMenu jMenu_VerifyCase;
    private javax.swing.JMenu jMenu_View;
    private javax.swing.JPanel jPanel_GroupSetting;
    private javax.swing.JProgressBar jProgressBar_Main;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private JPopupMenu.Separator jSeparator4;
    private javax.swing.JTextField jTextField_FilterFile;
    private javax.swing.JTextField jTextField_GroupName;
    private javax.swing.JTextField jTextField_MaskFile;
    private javax.swing.JTextField jTextField_OutPath;
    private javax.swing.JTextField jTextField_RegionFile;
    private javax.swing.JToolBar jToolBar_Main;
    private javax.swing.JToolBar jToolBar_Status;
    // End of variables declaration//GEN-END:variables
}
